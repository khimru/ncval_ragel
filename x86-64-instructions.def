# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
################################################################################
# This file includes instructions valid only in x86-64 mode.
################################################################################
# File format: see general-purpose-instructions.def
################################################################################
# This part describes instructions from AMD64 Architecture Programmer’s Manual
#				Volume 3: General-Purpose and System Instruction
#				Chapter 3: General-Purpose Instruction Reference
######## CALL (Near) ###########################################################
callq Eq, 0xff /2
######## CALL (Far) ############################################################
lcallq Mp, 0xff /3
######## CBW/CWDE/CDQE #########################################################
cltq, REXW_NONE 0x98
######## CWD/CDQ/CQO ###########################################################
cqto, REXW_NONE 0x99
######## CMPXCHG8B/CMPXCHG16B ##################################################
cmpxchg16b Mo, rexw 0x0f 0xc7 /1, lock Fn0000_0001_ECX_CMPXCHG16B
######## JCXZ/JECXZ/JRCXZ ######################################################
jrcxz Jb, 0xe3
######## JMP (Near) ############################################################
jmpq Eq, 0xff /4
######## JMP (Far) #############################################################
ljmpq Mp, 0xff /5
######## LAHF ##################################################################
# LAHF is always awailable in 16bit/32bit mode, but not always in 64bit mode
lahf, 0x9f, Fn8000_0001_ECX_LahfSahf
######## LEAVE #################################################################
leaveq, 0xc9
######## MOV ###################################################################
movabs Ob ab, 0xa0
movabs Ov av, 0xa1
movabs ab Ob, 0xa2
movabs av Ov, 0xa3
######## MOVD ##################################################################
movq Eq Vq, 0x66 rexw 0x0f 0x6e, Fn0000_0001_EDX_SSE2
movq Vq Eq, 0x66 rexw 0x0f 0x7e, Fn0000_0001_EDX_SSE2
movq Eq Pq, rexw 0x0f 0x6e, Fn0000_0001_EDX_MMX
movq Pq Eq, rexw 0x0f 0x7e, Fn0000_0001_EDX_MMX
######## MOVSX #################################################################
movsbq Eb Gq, rexw 0x0f 0xbe
movswq Ew Gq, rexw 0x0f 0xbf
######## MOVZX #################################################################
movzbq Eb Gq, rexw 0x0f 0xb6
movzwq Ew Gq, rexw 0x0f 0xb7
######## MOVSXD ################################################################
movslq Ed Gv, 0x63
######## POP ###################################################################
pop Eq, 0x8f /0
popq\ \ \ %fs, 0x0f 0xa1
popq\ \ \ %gs, 0x0f 0xa9
######## POPF/POPFD/POPFQ ######################################################
popfq, 0x9d
######## PUSH ##################################################################
push =Eq, 0xff /6
pushq\ \ %fs, 0x0f 0xa0
pushq\ \ %gs, 0x0f 0xa8
######## PUSHF/PUSHFD/PUSHFQ ###################################################
pushfq, 0x9c
######## RET (Near) ############################################################
retq, 0xc3
######## SAHF ##################################################################
# SAHF is always awailable in 16bit/32bit mode, but not always in 64bit mode
sahf, 0x9e, Fn8000_0001_ECX_LahfSahf
################################################################################
# This part describes instructions from AMD64 Architecture Programmer’s Manual
#				Volume 3: General-Purpose and System Instruction
#					 Chapter 4: System Instruction Reference
######## SWAPGS ################################################################
swapgs, 0x0f 0x01 0xf8
################################################################################
# This part describes instructions from AMD64 Architecture Programmer’s Manual
#				Volume 4: 128-Bit and 256-Bit Media Instructions
######## MOVD/VMOVD ############################################################
movq Eq Vq, 0x66 rexw 0x0f 0x6e, Fn0000_0001_EDX_SSE2
movq Vq Eq, 0x66 rexw 0x0f 0x7e, Fn0000_0001_EDX_SSE2
vmovq Eq Vo, 0xc4 RXB.00001 1.1111.0.01 0x6e, Fn0000_0001_ECX_AVX
vmovq Vo Eq, 0xc4 RXB.00001 1.1111.1.01 0x7e, Fn0000_0001_ECX_AVX
######## PEXTRQ/VPEXTRQ ########################################################
pextrq Ib Vpq Eq, 0x66 rexw 0x0f 0x3a 0x16, Fn0000_0001_ECX_SSE41
vpextrq Ib Vpqw Eq, 0xc4 RXB.00011 1.1111.0.01 0x16, Fn0000_0001_ECX_AVX
######## PINSRQ/VPINSRQ ########################################################
pinsrq Ib Eq Vpq, 0x66 rexw 0x0f 0x3a 0x22, Fn0000_0001_ECX_SSE41
vpinsrq Ib Eq Ho Vo, 0xc4 RXB.00011 1.1111.0.01 0x22, Fn0000_0001_ECX_AVX
################################################################################
